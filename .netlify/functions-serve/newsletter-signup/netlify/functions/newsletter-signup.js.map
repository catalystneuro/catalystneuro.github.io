{
  "version": 3,
  "sources": ["../../../../../../Users/bendichter/dev/catalystneuro.github.io/netlify/functions/newsletter-signup.ts"],
  "sourceRoot": "/var/folders/cg/mhhypnc14wn9kz5ydllymyc00000gp/T/tmp-23248-V3nc9266QMqe",
  "sourcesContent": ["import { Handler } from '@netlify/functions';\n\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Content-Type',\n  'Access-Control-Allow-Methods': 'POST, OPTIONS',\n};\n\nconst handler: Handler = async (event) => {\n  // Handle OPTIONS request for CORS\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 200,\n      headers: corsHeaders,\n      body: '',\n    };\n  }\n\n  if (event.httpMethod !== 'POST') {\n    return { \n      statusCode: 405, \n      headers: corsHeaders,\n      body: JSON.stringify({ message: 'Method not allowed' }) \n    };\n  }\n\n  try {\n    const { email } = JSON.parse(event.body || '{}');\n\n    if (!email) {\n      return { statusCode: 400, body: JSON.stringify({ message: 'Email is required' }) };\n    }\n\n    // Here you would typically add the email to your newsletter service\n    // For now, we'll just return success since Netlify Forms will capture the submission\n    return {\n      statusCode: 200,\n      headers: {\n        ...corsHeaders,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message: 'Successfully signed up for newsletter',\n        email,\n      }),\n    };\n  } catch (error) {\n    console.error('Newsletter signup error:', error);\n    return {\n      statusCode: 500,\n      headers: {\n        ...corsHeaders,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ message: 'Error signing up for newsletter' }),\n    };\n  }\n};\n\nexport { handler };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCAAgC;AAAA,EAChC,gCAAgC;AAClC;AAEA,IAAM,UAAmB,OAAO,UAAU;AAExC,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI,MAAM,eAAe,QAAQ;AAC/B,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,MAAM,KAAK,UAAU,EAAE,SAAS,qBAAqB,CAAC;AAAA,IACxD;AAAA,EACF;AAEA,MAAI;AACF,UAAM,EAAE,MAAM,IAAI,KAAK,MAAM,MAAM,QAAQ,IAAI;AAE/C,QAAI,CAAC,OAAO;AACV,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,SAAS,oBAAoB,CAAC,EAAE;AAAA,IACnF;AAIA,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,GAAG;AAAA,QACH,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,4BAA4B,KAAK;AAC/C,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS;AAAA,QACP,GAAG;AAAA,QACH,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,SAAS,kCAAkC,CAAC;AAAA,IACrE;AAAA,EACF;AACF;",
  "names": []
}
